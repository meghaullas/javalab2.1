public class ShareTrader {
    
    static int maxProfit = 0;

    public static int findMaxProfit(int[] prices) {
        if (prices == null || prices.length == 0) {
            maxProfit = 0;
            return 0;
        }

        int n = prices.length;
        int[] left = new int[n];  
        int[] right = new int[n]; 

       
        int minPrice = prices[0];
        for (int i = 1; i < n; i++) {
            left[i] = Math.max(left[i - 1], prices[i] - minPrice);
            minPrice = Math.min(minPrice, prices[i]);
        }

       
        int maxPrice = prices[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            right[i] = Math.max(right[i + 1], maxPrice - prices[i]);
            maxPrice = Math.max(maxPrice, prices[i]);
        }

        
        maxProfit = 0;
        for (int i = 0; i < n; i++) {
            maxProfit = Math.max(maxProfit, left[i] + right[i]);
        }

        return maxProfit;
    }

    
    public static void main(String[] args) {
        // Test case 1
        int[] prices1 = {10, 22, 5, 75, 65, 80};
        System.out.println("Max Profit for prices1: " + findMaxProfit(prices1));  // Output: 87

        // Test case 2
        int[] prices2 = {2, 30, 15, 10, 8, 25, 80};
        System.out.println("Max Profit for prices2: " + findMaxProfit(prices2));  // Output: 100
    }
}
